use rand::{prelude::*, distributions::Alphanumeric};

pub type BaseToken = [u8; 16];

fn gen_token() -> BaseToken {
    let s: String = rand::thread_rng()
        .sample_iter(&Alphanumeric)
        .take(16)
        .map(char::from)
        .collect();

    s.as_bytes().try_into().unwrap()
}

/// A session Id, where the Id is an 8 byte snowflake.
pub struct SessionId(pub u64);

/// A token for a user. This data is 16 bytes of noise, as generated by [rand](https://crates.io/crates/rand). 
pub struct Token(pub BaseToken);

#[cfg(test)]
mod test {
    use super::*;

    #[test]
    fn id() {
        println!("{:?}", gen_token())
    }
}
